# UltraRAG MCP Servers Docker Image
# Starts all available MCP servers for AI agent access

FROM ubuntu:22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV CUDA_VISIBLE_DEVICES=""
ENV PYTHONUNBUFFERED=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-venv \
    curl \
    wget \
    git \
    build-essential \
    libopenblas-dev \
    libomp-dev \
    pkg-config \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

# Create Python virtual environment
RUN python3 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Upgrade pip and install build tools
RUN pip3 install --no-cache-dir -U pip setuptools wheel

# Create working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip3 install --no-cache-dir -r requirements.txt

# Install PyTorch CPU
RUN pip3 install --no-cache-dir torch==2.1.0+cpu torchvision==0.16.0+cpu torchaudio==2.1.0+cpu \
    -f https://download.pytorch.org/whl/torch_stable.html

# Copy the entire project
COPY . .

# Install the project in development mode
RUN pip3 install --no-cache-dir -e .

# Create data and logs directories
RUN mkdir -p /app/data /app/logs && \
    chmod -R 777 /app/data /app/logs

# Copy the startup script
COPY start_mcp_servers.sh /app/start_mcp_servers.sh

# Make startup script executable
RUN chmod +x /app/start_mcp_servers.sh

# Expose ports for MCP servers
EXPOSE 8000-8009

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Set MCP transport and ports
ENV MCP_TRANSPORT=http
ENV MCP_PORT=8000

# Start all MCP servers
CMD ["/app/start_mcp_servers.sh"]
